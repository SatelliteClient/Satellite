package com.github.satellite.features.module.exploit;

import java.awt.Color;

import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;

import com.github.satellite.event.Event;
import com.github.satellite.event.listeners.EventMotion;
import com.github.satellite.event.listeners.EventPacket;
import com.github.satellite.event.listeners.EventRenderWorld;
import com.github.satellite.event.listeners.EventUpdate;
import com.github.satellite.features.module.Module;
import com.github.satellite.setting.BooleanSetting;
import com.github.satellite.setting.ModeSetting;
import com.github.satellite.setting.NumberSetting;
import com.github.satellite.utils.BlockUtils;
import com.github.satellite.utils.ClientUtils;
import com.github.satellite.utils.InventoryUtils;
import com.github.satellite.utils.render.RenderUtils;

import net.minecraft.block.BlockAir;
import net.minecraft.block.BlockObsidian;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityEnderCrystal;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.network.play.server.SPacketSetSlot;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;
import net.minecraft.util.text.ChatType;
import net.minecraft.util.text.TextComponentString;

public class CivBreak extends Module {

    public CivBreak() {
        super("CivBreak", Keyboard.KEY_NONE, Category.EXPLOIT);
    }

    @Override
    public void init() {
        super.init();
    }

    BlockPos pos;
    boolean breakFlag;

    public void updateCev() {

    }

    @Override
    public void onEvent(Event<?> e) {
        BlockPos[] block = new BlockPos[] {};
        if (e instanceof EventUpdate) {
            int slot = InventoryUtils.getSlot();

            int chest = InventoryUtils.pickItem(130);
            int pickaxe = InventoryUtils.pickItem(278);

            if (pos == null)
                return;

            InventoryUtils.setSlot(pickaxe);
            mc.playerController.onPlayerDamageBlock(pos, EnumFacing.UP);
            mc.getConnection().sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, pos, EnumFacing.UP));
            if (mc.world.isAirBlock(pos))
                breakFlag = true;

            InventoryUtils.setSlot(chest);
            BlockUtils.doPlace(BlockUtils.isPlaceable(pos, 0, true), true);

            InventoryUtils.setSlot(slot);
        }
        if (e instanceof EventPacket) {
            EventPacket event = (EventPacket)e;
            Packet p = event.getPacket();
            if (p instanceof CPacketPlayerTryUseItemOnBlock) {
                CPacketPlayerTryUseItemOnBlock packet = (CPacketPlayerTryUseItemOnBlock)p;

                pos = packet.getPos().offset(packet.getDirection());
            }
            if (p instanceof CPacketPlayerDigging) {
                CPacketPlayerDigging packet = (CPacketPlayerDigging)p;

                pos = packet.getPosition();
            }
        }
        if (e instanceof EventRenderWorld) {
            if (mc.objectMouseOver != null && mc.objectMouseOver.sideHit != null && mc.objectMouseOver.getBlockPos() != null) {
                RenderUtils.drawBlockBox(mc.objectMouseOver.getBlockPos().offset(mc.objectMouseOver.sideHit), new Color(0xff, 0xff, 0xff, 0x40));
                if (pos != null) {
                    RenderUtils.drawBlockBox(pos, new Color(0x42, 0x87, 0xf5, 0xff));
                }
            }

        }
        super.onEvent(e);
    }

    @Override
    public void onEnable() {
        breakFlag = false;
        pos = null;
        super.onEnable();
    }

    @Override
    public void onDisable() {
        super.onDisable();
    }

}